@charset "utf-8";

// ===================================================================
// 変数
// ===================================================================
$color: #000;
$link: #1DA1F2;
$green: #00512d;

$sans : "Hiragino Kaku Gothic ProN", "ヒラギノ角ゴ ProN", "Hiragino Kaku Gothic Pro", "ヒラギノ角ゴ Pro", "メイリオ", "Meiryo", sans-serif;
$serif: "游明朝", YuMincho, "Hiragino Mincho ProN", "Hiragino Mincho Pro", "HG明朝E", "ＭＳ 明朝", serif;
// $sans: "Yu Gothic", YuGothic, "Hiragino Kaku Gothic ProN", "ヒラギノ角ゴ ProN", "メイリオ", "Meiryo", sans-serif;
// $serif: YakuHanMP, "游明朝", YuMincho, "Hiragino Mincho ProN", "Hiragino Mincho Pro", "HG明朝E", "ＭＳ 明朝", serif;;


$easeInSine: cubic-bezier(0.12, 0, 0.39, 0);
$easeOutSine: cubic-bezier(0.61, 1, 0.88, 1);
$easeInOutSine: cubic-bezier(0.37, 0, 0.63, 1);

$easeOutQuad: cubic-bezier(0.5, 1, 0.89, 1);

$easeInCubic: cubic-bezier(0.32, 0, 0.67, 0);
$easeOutCubic: cubic-bezier(0.33, 1, 0.68, 1);
$easeInOutCubic: cubic-bezier(0.65, 0, 0.35, 1);

$easeInExpo: cubic-bezier(0.7, 0, 0.84, 0);
$easeOutExpo: cubic-bezier(0.16, 1, 0.3, 1);
$easeInOutExpo: cubic-bezier(0.87, 0, 0.13, 1);

$easeInBack: cubic-bezier(0.36, 0, 0.66, -0.56);
$easeOutBack: cubic-bezier(0.34, 1.56, 0.64, 1);
$easeInOutBack: cubic-bezier(0.68, -0.6, 0.32, 1.6);

$easeDuration: .3s;
$easeTheme: $easeOutQuad;

// モバイルファースト
$breakpoints: (
	sm: 640px,
	md: 1023px,
	lg: 1920px,
);
$container-padding: (
	sm: (20/375*100vw),
	md: (40/375*100vw),
	lg: (200/1600*100vw),
	//wide: 200px,
	wide: (200*1920/1440),
);

// コンテンツの最大幅
$container-width : 1920px;

// アンカーのマージン
//$scroll-margin-top: 60px;
//$scroll-margin-top-SP: 60px;

// ===================================================================
// container
// ===================================================================
@mixin container{
	margin-left: auto; margin-right: auto;
	width: 100%;
	max-width: $container-width;
	@include sp{
		padding-left: map-get($container-padding, 'sm');
		padding-right: map-get($container-padding, 'sm');
	}
	@include tab{
		padding-left: map-get($container-padding, 'md');
		padding-right: map-get($container-padding, 'md');
	}
	@include pc{
		padding-left: map-get($container-padding, 'lg');
		padding-right: map-get($container-padding, 'lg');
	}
	@include wide{
		padding-left: map-get($container-padding, 'wide')+px;
		padding-right: map-get($container-padding, 'wide')+px;
	}
}

// ===================================================================
// mixin responsive
// sp--[1]--tab--[2]--lap--[3]--wide
//                      pc        pc
// ===================================================================

@mixin sp {
	@media screen and (max-width: (map-get($breakpoints, 'sm')) ){@content;}
}
@mixin sp-tab {
	@media screen and (max-width: (map-get($breakpoints, 'md')) ){@content;}
}
@mixin sp-lap {
	@media screen and (max-width: (map-get($breakpoints, 'lg')) ){@content;}
}

@mixin tab {
	@media screen and (min-width: (map-get($breakpoints, 'sm') + 1) ) and (max-width: (map-get($breakpoints, 'md') ) ){@content;}
}
@mixin tab-lap {
	@media screen and (min-width: (map-get($breakpoints, 'sm') + 1) ) and (max-width: (map-get($breakpoints, 'lg') ) ){@content;}
}
@mixin tab-pc {
	@media screen and (min-width: (map-get($breakpoints, 'sm') + 1) ){@content;}
}

@mixin lap {
	@media screen and (min-width: (map-get($breakpoints, 'md') + 1) ) and (max-width: (map-get($breakpoints, 'lg') ) ){@content;}
}

@mixin pc {
	@media screen and (min-width: (map-get($breakpoints, 'md') + 1) ){@content;}
}
@mixin pc-tab {
	@media screen and (min-width: (map-get($breakpoints, 'sm') + 1) ){@content;}
}

@mixin wide {
	@media screen and (min-width: (map-get($breakpoints, 'lg') + 1) ){@content;}
}

// ===================================================================
// mixin utility
// ===================================================================

@mixin hover {
	transition: $easeDuration $easeTheme;
	&:active {
		transform: scale(0.965);
	}
	@media (hover: hover) {
		&:hover,
		a:hover & {
			@content;
		}
	}
}


