@use '../Base/config' as config;
/*----------------------------------------------------
	汎用クラス
----------------------------------------------------*/
.bold,
.strong {
	font-weight: bold;
}

.u-hide {
	display: none;
}
.u-breakLine {
	display: inline-block;
}
.u-center {
	text-align: center;
}

.u-only-sp {
	display: block !important;
	@include config.pc-tab {
		display: none !important;
	}
}

.u-only-pc {
	display: none !important;
	@include config.pc-tab {
		display: block !important;
	}
}

.u-accent-color {
	color: var(--accent-color);
}

.u-template {
	display: flex;
	flex-direction: column;
	gap: 80/16+rem;
	padding-bottom: 100/16+rem;
	> div {
		display: flex;
		flex-direction: column;
		gap: 24/16+rem;
	}
}
.u-gap {
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	gap: var(--gap);
}
.u-section-dark {
	// background: var(--accent-color-dark);
}
.is-disabled {
	opacity: 0.7;
	pointer-events: none;
}

.u-budoux {
	word-break: keep-all;
	overflow-wrap: anywhere;
}

@for $i from 1 through 30 {
	[data-delay="#{$i * 0.1}"] {
		transition-delay: #{$i * 0.1}s;
	}
}

.__loop {
	animation: loopLeft linear 30s infinite;
	will-change: transform;
	display: flex;
	img {
		width: auto;
		max-width: none;
		height: 300/16+rem;
	}
	@include config.pc {
		animation: loopLeft linear 50s infinite;
		img {
			height: 526/16+rem;
		}
	}
}
@keyframes loopLeft {
	from {
		transform: translate3d(0, 0, 0);
	}
	to {
		transform: translate3d(-100%, 0, 0);
	}
}
@keyframes loopRight {
	from {
		transform: translate3d(-100%, 0, 0);
	}
	to {
		transform: translate3d(0, 0, 0);
	}
}